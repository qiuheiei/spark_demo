package test

import java.util.Properties

import org.apache.spark.SparkConf
import org.apache.spark.sql.{DataFrame, SaveMode, SparkSession}

object Spark2CK {
  def main(args: Array[String]): Unit = {
    val conf: SparkConf = new SparkConf().setAppName("test-clickhouse")
      .set("spark.sql.autoBroadcastJoinThreshold","128000000")//.setMaster("local[*]")
      .set("spark.hadoop.mapreduce.input.fileinputformat.split.maxsize","128000000")//.setMaster("local[*]")
      .set("spark.hadoop.mapreduce.input.fileinputformat.split.minsize","128000000")//.setMaster("local[*]")
//      .set("spark.default.parallelism","48")//.setMaster("local[*]")
      .set("spark.repartitioning","true")//.setMaster("local[*]")
    val spark: SparkSession = SparkSession.builder().enableHiveSupport().config(conf).getOrCreate()
    val CLICKHOUSE_URL = "jdbc:clickhouse://chproxy.bdp.yxqiche.com:80/yx_ads"
//    val sqltest:String = "select\n                   nvl(t1.tagid ,'')                       as tag_id                                             -- tagid\n        , nvl(t1.appKey ,'')                      as app_key                                            -- appkey\n        , timestamp(nvl(t1.logtime ,'1970-01-01 08:00:00'))                     as log_time                                           -- 日志时间\n        , nvl(t1.httpProxyProcess ,'')            as http_proxy_process                                 -- http过程代理访问工序数\n        , nvl(t1.httpProxyTotalTimeConsuming ,-1) as http_proxy_total_time_consuming                    -- http过程代理访问总耗时（毫秒）\n        , nvl(t1.httpProxyDetail ,'')             as http_proxy_detail                                  -- http过程代理明细\n        , nvl(t1.method ,'')                      as method                                             -- 服务名称\n        , nvl(t1.requestIp ,'')                   as request_ip                                         -- 访问者IP\n        , nvl(t1.requestParams ,'')               as request_params                                     -- 请求入参\n        , nvl(t1.responseCode ,'')                as response_code                                      -- 响应状态码\n        , nvl(t1.responseData ,'')                as response_data                                      -- 响应结果\n        , nvl(t1.responseMessage ,'')             as response_message                                   -- 响应信息\n        , nvl(t1.server ,'')                      as server                                             -- 服务器地址xx.xx.xx.xx:xx\n        , nvl(t1.timeConsuming ,-1)               as time_consuming                                     -- 方法耗时(毫秒)\n        , nvl(t1.hour ,-1)                        as hour                                               -- 小时\n        , nvl(t2.fuser_information ,'')           as user_service_information_fuser_information         -- 用户信息描述\n        , nvl(t2.fuser_name ,'')                  as user_service_information_fuser_name                -- 联系人\n        , nvl(t2.fuser_text ,'')                  as user_service_information_fuser_text                -- 用户名称\n        , nvl(t2.fuser_mail ,'')                  as user_service_information_fuser_mail                -- 用户安全邮箱\n        , nvl(t2.fservice ,'')                    as user_service_information_fservice                  -- 所选服务\n        , nvl(t2.fservice_validity_type ,'')      as user_service_information_fservice_validity_type    -- 是否有限制时间\n        , if(t2.fservice_validity_begin = '', '1970-01-01 08:00:00',\n                          fservice_validity_begin)     as user_service_information_fservice_validity_begin   -- appkey有效期(开始日期)\n        , if(t2.fservice_validity_end = '', '2099-01-01 08:00:00',\n                          fservice_validity_end)       as user_service_information_fservice_validity_end     -- appkey有效期(结束日期)\n        , nvl(t2.fip_white_list ,'')              as user_service_information_fip_white_list            -- ip白名单\n        , nvl(t2.fstate ,'')                      as user_service_information_fstate                    -- 用户信息状态\n        , nvl(t2.fcreater ,'')                    as user_service_information_fcreater                  -- 用户信息创建人\n        , if(t2.fcreate_time != '', t2.fcreate_time, '1970-01-01 08:00:00')                as user_service_information_fcreate_time              -- 用户信息创建时间\n        , nvl(t2.fupdater ,'')                    as user_service_information_fupdater                  -- 用户信息修改人\n        , if(t2.fupdate_time != '', t2.fupdate_time, '1970-01-01 08:00:00')                as user_service_information_fupdate_time              -- 用户信息更新时间\n        , nvl(t3.fuser_type ,'')                  as user_information_fuser_type                        -- 公司用户类别\n        , nvl(t3.fuser_information ,'')           as user_information_fuser_information                 -- 公司用户信息描述\n        , nvl(t3.fuser_text ,'')                  as user_information_fuser_text                        -- 公司用户名称\n        , nvl(t3.fuser_name ,'')                  as user_information_fuser_name                        -- 公司联系人\n        , nvl(t3.fuser_mail ,'')                  as user_information_fuser_mail                        -- 公司信息用户安全邮箱地址\n        , nvl(t3.fstate ,'')                      as user_information_fstate                            -- 公司信息状态\n        , nvl(t3.fcreater ,'')                    as user_information_fcreater                          -- 公司信息创建人\n        , if(t3.fcreate_time != '', t3.fcreate_time, '1970-01-01 08:00:00')                as user_information_fcreate_time                      -- 公司信息创建时间\n        , nvl(t3.fupdater ,'')                   as user_information_fupdater                          -- 公司信息修改人\n        , if(t3.fupdate_time != '', t3.fupdate_time, '1970-01-01 08:00:00')                as user_information_fupdate_time                      -- 公司信息更新时间\n        , nvl(t4.fservice_name ,'')               as service_information_fservice_name                  -- 服务名称\n        , nvl(t4.fdevelopers ,'')                 as service_information_fdevelopers                    -- 服务开发人员\n        , nvl(t4.fdevelopers_mail ,'')            as service_information_fdevelopers_mail               -- 服务开发人员邮箱\n        , nvl(t4.ffunction_description ,'')       as service_information_ffunction_description          -- 服务描述\n        , nvl(t4.faccess_address ,'')             as service_information_faccess_address                -- 服务访问地址\n        , nvl(t4.fparameter_description ,'')      as service_information_fparameter_description         -- 服务参数描述\n        , nvl(t4.faccess_policy ,'')              as service_information_faccess_policy                 -- 服务访问策略\n        , nvl(t4.fcomplete_example ,'')           as service_information_fcomplete_example              -- 服务完整示例\n        , nvl(t4.fstate ,'')                      as service_information_fstate                         -- 服务状态\n        , nvl(t4.fcreater ,'')                    as service_information_fcreater                       -- 服务创建人\n        , if(t4.fcreate_time != '', t4.fcreate_time, '1970-01-01 08:00:00')               as service_information_fcreate_time                   -- 服务创建时间\n        , nvl(t4.fupdater ,'')                    as service_information_fupdater                       -- 服务修改人\n        ,if(t4.fupdate_time != '', t4.fupdate_time, '1970-01-01 08:00:00')               as service_information_fupdate_time                   -- 服务更新时间\n        , nvl(t5.fservice_group_name ,'')         as service_group_information_fservice_group_name      -- 服务组名称\n        , nvl(t5.fdescription_information ,'')    as service_group_information_fdescription_information -- 服务组描述\n        , nvl(t5.fservice_providers ,'')          as service_group_information_fservice_providers       -- 服务组提供方\n        , nvl(t5.fmail ,'')                       as service_group_information_fmail                    -- 服务组邮箱\n        , nvl(t5.fstate ,'')                      as service_group_information_fstate                   -- 服务组状态\n        , nvl(t5.fcreater ,'')                    as service_group_information_fcreater                 -- 服务组创建人\n        , if(t5.fcreate_time != '', t5.fcreate_time, '1970-01-01 08:00:00')                as service_group_information_fcreate_time             -- 服务组创建时间\n        , nvl(t5.fupdater ,'')                    as service_group_information_fupdater                 -- 服务组修改人\n        , if(t5.fupdate_time != '', t5.fupdate_time, '1970-01-01 08:00:00')                as service_group_information_fupdate_time             -- 服务组更新时间\n        , t1.dt                          as dt\n        from (\n            select nvl(regexp_replace(tagid, '\\\\[|\\\\]', ''), '')                                         as tagid\n            , timestamp(nvl(split(regexp_replace(logtime, '\\\\[|\\\\]', ''), '\\\\.')[0],\n            '1970-01-01 08:00:00'))                                                 as logtime\n            , nvl(get_json_object(content, '$[0].appKey'), '')                                      as `appKey`\n            , nvl(get_json_object(content, '$[0].httpProxyProcess'), -1)                            as `httpProxyProcess`\n            , nvl(get_json_object(content, '$[0].httpProxyTotalTimeConsuming'),-1)                  as `httpProxyTotalTimeConsuming`\n            , nvl(get_json_object(content, '$[0].httpProxyDetail'), '')                             as `httpProxyDetail`\n            , nvl(get_json_object(content, '$[0].method'), '')                                      as `method`\n            , nvl(get_json_object(content, '$[0].requestIp'), '')                                   as `requestIp`\n            , nvl(get_json_object(content, '$[0].requestParams'), '')                               as `requestParams`\n            , nvl(get_json_object(content, '$[0].responseCode'), '')                                as `responseCode`\n            , nvl(get_json_object(content, '$[0].responseData'), '')                                as `responseData`\n            , nvl(get_json_object(content, '$[0].responseMessage'), '')                             as `responseMessage`\n            , nvl(get_json_object(content, '$[0].server'), '')                                      as `server`\n            , nvl(get_json_object(content, '$[0].timeConsuming'), -1)                               as `timeConsuming`\n            , dt\n            , hour\n        from yx_stage.stage_99_api_proce_log\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t1\n        left join\n        (\n        select /*+ BROADCAST(r) */\n              fpid\n            ,`fuser_information`       -- 信息描述\n            ,`fuser_name`              -- 联系人\n            ,`fuser_text`              -- 用户名称\n            --,fuser_tel                                       -- 用户电话 加密\n            ,`fuser_mail`              -- 用户安全邮箱\n            ,`fappkey`                 -- 请求标识\n            ,`fservice`                -- 所选服务\n            ,`fservice_validity_type`  -- 是否有限制时间\n            ,`fservice_validity_begin` -- appkey有效期(开始日期)\n            ,`fservice_validity_end`   -- appkey有效期(结束日期)\n            ,`fip_white_list`          -- ip白名单\n            ,`fstate`                  -- 状态\n            ,`fcreater`                -- 创建人\n            , `fcreate_time`            -- 创建时间\n            ,`fupdater`                -- 修改人\n            , `fupdate_time`            -- 更新时间\n            --,fuser_tel_mobile_make                           -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_user_service_information_a -- 用户信息表\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t2 on t1.appkey = t2.fappkey and t1.dt = t2.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               id                                                                                          -- 用户id\n            ,`fuser_type`        -- 用户类别\n            ,`fuser_information` -- 用户信息描述\n            ,`fuser_text`        -- 用户名称\n            ,`fuser_name`        -- 联系人\n            --,fuser_tel                                           -- 联系电话, 加密\n            ,`fuser_mail`        -- 用户安全邮箱地址\n            ,`fstate`            -- 状态：\n            ,`fcreater`          -- 创建人\n            ,  `fcreate_time`      -- 创建时间\n            ,`fupdater`          -- 修改人\n            ,  `fupdate_time`      -- 更新时间\n            --,fuser_tel_mobile_make                               -- 手机号码掩码\n            , dt\n            from yx_ods.ods_41_tb_user_information_a -- 公司信息表\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t3 on t2.fpid = t3.id and t1.dt = t3.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               fgroup_id                                                                                        -- 服务组id\n            ,`fservice_name`          -- 服务名称\n            ,`fdevelopers`            -- 开发人员\n            --,fdevelopers_tel                                            -- 开发人员电话 加密\n            ,`fdevelopers_mail`       -- 开发人员邮箱\n            ,`ffunction_description`  -- 服务描述\n            , nvl(split(faccess_address, 'method=')[1], '')                          as `faccess_address`        -- 访问地址\n            ,`fparameter_description` -- 参数描述\n            ,`faccess_policy`         -- 访问策略\n            ,`fcomplete_example`      -- 完整示例\n            ,`fstate`                 -- 状态\n            ,`fcreater`               -- 创建人\n            , `fcreate_time`           -- 创建时间\n            ,`fupdater`               -- 修改人\n            ,  `fupdate_time`           -- 更新时间\n        --,fdevelopers_tel_mobile_make                                -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_service_information_a -- 服务信息表\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t4 on t1.method = t4.faccess_address and t1.dt = t4.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               id                                                                                                 -- id\n            ,`fservice_group_name`      -- 服务组名称\n            ,`fdescription_information` -- 描述\n            ,`fservice_providers`       -- 服务提供方\n            --,ftel                                                       -- 联系电话 加密\n            ,`fmail`                    -- 邮箱\n            ,`fstate`                   -- 状态\n            ,`fcreater`                 -- 创建人\n            , `fcreate_time`             -- 创建时间\n            ,`fupdater`                 -- 修改人\n            ,  `fupdate_time`             -- 更新时间\n            --,ftel_mobile_make                                           -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_service_group_information_a --服务组信息\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t5 on t4.fgroup_id = t5.id and t1.dt = t5.dt"
    val sqltest:String = "select\n         nvl(t1.tagid ,'')                       as tag_id                                             -- tagid\n        , nvl(split(t1.appKey,'##')[0] ,'')                      as app_key                                            -- appkey\n        , nvl(t1.logtime ,'1970-01-01 00:00:00')                     as log_time                                           -- 日志时间\n        , nvl(t1.httpProxyProcess ,'')            as http_proxy_process                                 -- http过程代理访问工序数\n        , nvl(t1.httpProxyTotalTimeConsuming ,-1) as http_proxy_total_time_consuming                    -- http过程代理访问总耗时（毫秒）\n        , nvl(t1.httpProxyDetail ,'')             as http_proxy_detail                                  -- http过程代理明细\n        , nvl(split(t1.method,'##')[0] ,'')                      as method                                             -- 服务名称\n        , nvl(t1.requestIp ,'')                   as request_ip                                         -- 访问者IP\n        , nvl(t1.requestParams ,'')               as request_params                                     -- 请求入参\n        , nvl(t1.responseCode ,'')                as response_code                                      -- 响应状态码\n        , nvl(t1.responseData ,'')                as response_data                                      -- 响应结果\n        , nvl(t1.responseMessage ,'')             as response_message                                   -- 响应信息\n        , nvl(t1.server ,'')                      as server                                             -- 服务器地址xx.xx.xx.xx:xx\n        , nvl(t1.timeConsuming ,-1)               as time_consuming                                     -- 方法耗时(毫秒)\n        , nvl(t1.hour ,-1)                        as hour                                               -- 小时\n        , nvl(t2.fuser_information ,'')           as user_service_information_fuser_information         -- 用户信息描述\n        , nvl(t2.fuser_name ,'')                  as user_service_information_fuser_name                -- 联系人\n        , nvl(t2.fuser_text ,'')                  as user_service_information_fuser_text                -- 用户名称\n        , nvl(t2.fuser_mail ,'')                  as user_service_information_fuser_mail                -- 用户安全邮箱\n        , nvl(t2.fservice ,'')                    as user_service_information_fservice                  -- 所选服务\n        , nvl(t2.fservice_validity_type ,'')      as user_service_information_fservice_validity_type    -- 是否有限制时间\n        , nvl(t2.fservice_validity_begin,'')     as user_service_information_fservice_validity_begin   -- appkey有效期(开始日期)\n        , nvl(t2.fservice_validity_end,'')      as user_service_information_fservice_validity_end     -- appkey有效期(结束日期)\n        , nvl(t2.fip_white_list ,'')              as user_service_information_fip_white_list            -- ip白名单\n        , nvl(t2.fstate ,'')                      as user_service_information_fstate                    -- 用户信息状态\n        , nvl(t2.fcreater ,'')                    as user_service_information_fcreater                  -- 用户信息创建人\n        , nvl(t2.fcreate_time,'')                as user_service_information_fcreate_time              -- 用户信息创建时间\n        , nvl(t2.fupdater ,'')                    as user_service_information_fupdater                  -- 用户信息修改人\n        , nvl(t2.fupdate_time,'')                as user_service_information_fupdate_time              -- 用户信息更新时间\n        , nvl(t3.fuser_type ,'')                  as user_information_fuser_type                        -- 公司用户类别\n        , nvl(t3.fuser_information ,'')           as user_information_fuser_information                 -- 公司用户信息描述\n        , nvl(t3.fuser_text ,'')                  as user_information_fuser_text                        -- 公司用户名称\n        , nvl(t3.fuser_name ,'')                  as user_information_fuser_name                        -- 公司联系人\n        , nvl(t3.fuser_mail ,'')                  as user_information_fuser_mail                        -- 公司信息用户安全邮箱地址\n        , nvl(t3.fstate ,'')                      as user_information_fstate                            -- 公司信息状态\n        , nvl(t3.fcreater ,'')                    as user_information_fcreater                          -- 公司信息创建人\n        , nvl(t3.fcreate_time,'')                as user_information_fcreate_time                      -- 公司信息创建时间\n        , nvl(t3.fupdater ,'')                   as user_information_fupdater                          -- 公司信息修改人\n        , nvl(t3.fupdate_time,'')                as user_information_fupdate_time                      -- 公司信息更新时间\n        , nvl(t4.fservice_name ,'')               as service_information_fservice_name                  -- 服务名称\n        , nvl(t4.fdevelopers ,'')                 as service_information_fdevelopers                    -- 服务开发人员\n        , nvl(t4.fdevelopers_mail ,'')            as service_information_fdevelopers_mail               -- 服务开发人员邮箱\n        , nvl(t4.ffunction_description ,'')       as service_information_ffunction_description          -- 服务描述\n        , nvl(split(t4.faccess_address,'##')[0] ,'')             as service_information_faccess_address                -- 服务访问地址\n        , nvl(t4.fparameter_description ,'')      as service_information_fparameter_description         -- 服务参数描述\n        , nvl(t4.faccess_policy ,'')              as service_information_faccess_policy                 -- 服务访问策略\n        , nvl(t4.fcomplete_example ,'')           as service_information_fcomplete_example              -- 服务完整示例\n        , nvl(t4.fstate ,'')                      as service_information_fstate                         -- 服务状态\n        , nvl(t4.fcreater ,'')                    as service_information_fcreater                       -- 服务创建人\n        , nvl(t4.fcreate_time,'')               as service_information_fcreate_time                   -- 服务创建时间\n        , nvl(t4.fupdater ,'')                    as service_information_fupdater                       -- 服务修改人\n        , nvl(t4.fupdate_time,'')               as service_information_fupdate_time                   -- 服务更新时间\n        , nvl(t5.fservice_group_name ,'')         as service_group_information_fservice_group_name      -- 服务组名称\n        , nvl(t5.fdescription_information ,'')    as service_group_information_fdescription_information -- 服务组描述\n        , nvl(t5.fservice_providers ,'')          as service_group_information_fservice_providers       -- 服务组提供方\n        , nvl(t5.fmail ,'')                       as service_group_information_fmail                    -- 服务组邮箱\n        , nvl(t5.fstate ,'')                      as service_group_information_fstate                   -- 服务组状态\n        , nvl(t5.fcreater ,'')                    as service_group_information_fcreater                 -- 服务组创建人\n        , nvl(t5.fcreate_time,'')                as service_group_information_fcreate_time             -- 服务组创建时间\n        , nvl(t5.fupdater ,'')                    as service_group_information_fupdater                 -- 服务组修改人\n        , nvl(t5.fupdate_time,'')                as service_group_information_fupdate_time             -- 服务组更新时间\n        , t1.dt                          as dt\n        from (\n            select nvl(regexp_replace(tagid, '\\\\[|\\\\]', ''), '')                                         as tagid\n            , nvl(split(regexp_replace(logtime, '\\\\[|\\\\]', ''), '\\\\.')[0],\n            '1970-01-01 08:00:00')                                                 as logtime\n            , concat(nvl(get_json_object(content, '$[0].appKey'), ''),'##',cast(ceiling(rand() * 48) as int))                                      as `appKey`\n            , nvl(get_json_object(content, '$[0].httpProxyProcess'), -1)                            as `httpProxyProcess`\n            , nvl(get_json_object(content, '$[0].httpProxyTotalTimeConsuming'),-1)                  as `httpProxyTotalTimeConsuming`\n            , nvl(get_json_object(content, '$[0].httpProxyDetail'), '')                             as `httpProxyDetail`\n            , concat(nvl(get_json_object(content, '$[0].method'), '') ,'##',cast(ceiling(rand() * 48) as int))                                       as `method`\n            , nvl(get_json_object(content, '$[0].requestIp'), '')                                   as `requestIp`\n            , nvl(get_json_object(content, '$[0].requestParams'), '')                               as `requestParams`\n            , nvl(get_json_object(content, '$[0].responseCode'), '')                                as `responseCode`\n            , nvl(get_json_object(content, '$[0].responseData'), '')                                as `responseData`\n            , nvl(get_json_object(content, '$[0].responseMessage'), '')                             as `responseMessage`\n            , nvl(get_json_object(content, '$[0].server'), '')                                      as `server`\n            , nvl(get_json_object(content, '$[0].timeConsuming'), -1)                               as `timeConsuming`\n            , dt\n            , hour\n        from yx_stage.stage_99_api_proce_log\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t1\n        left join\n        (\n        select /*+ BROADCAST(r) */\n              concat(fpid,'##',cast(ceiling(rand() * 48) as int)) as fpid\n            ,`fuser_information`       -- 信息描述\n            ,`fuser_name`              -- 联系人\n            ,`fuser_text`              -- 用户名称\n            --,fuser_tel                                       -- 用户电话 加密\n            ,`fuser_mail`              -- 用户安全邮箱\n            ,concat(`fappkey`,'##',ex_str) as `fappkey`                 -- 请求标识\n            ,`fservice`                -- 所选服务\n            ,`fservice_validity_type`  -- 是否有限制时间\n            ,`fservice_validity_begin` -- appkey有效期(开始日期)\n            ,`fservice_validity_end`   -- appkey有效期(结束日期)\n            ,`fip_white_list`          -- ip白名单\n            ,`fstate`                  -- 状态\n            ,`fcreater`                -- 创建人\n            , `fcreate_time`            -- 创建时间\n            ,`fupdater`                -- 修改人\n            , `fupdate_time`            -- 更新时间\n            --,fuser_tel_mobile_make                           -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_user_service_information_a lateral view explode(array(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48)) tmp as ex_str-- 用户信息表\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t2 on t1.appkey = t2.fappkey and t1.dt = t2.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               concat(`id`,'##',ex_str) as `id`                                                                                          -- 用户id\n            ,`fuser_type`        -- 用户类别\n            ,`fuser_information` -- 用户信息描述\n            ,`fuser_text`        -- 用户名称\n            ,`fuser_name`        -- 联系人\n            --,fuser_tel                                           -- 联系电话, 加密\n            ,`fuser_mail`        -- 用户安全邮箱地址\n            ,`fstate`            -- 状态：\n            ,`fcreater`          -- 创建人\n            ,  `fcreate_time`     -- 创建时间\n            ,`fupdater`          -- 修改人\n            ,  `fupdate_time`      -- 更新时间\n            --,fuser_tel_mobile_make                               -- 手机号码掩码\n            , dt\n            from yx_ods.ods_41_tb_user_information_a lateral view explode(array(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48)) tmp as ex_str-- 公司信息表\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t3 on t2.fpid = t3.id and t1.dt = t3.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               concat(`fgroup_id`,'##',cast(ceiling(rand() * 48) as int)) as `fgroup_id`                                                                                        -- 服务组id\n            ,`fservice_name`          -- 服务名称\n            ,`fdevelopers`            -- 开发人员\n            --,fdevelopers_tel                                            -- 开发人员电话 加密\n            ,`fdevelopers_mail`       -- 开发人员邮箱\n            ,`ffunction_description`  -- 服务描述\n            , concat(nvl(split(faccess_address, 'method=')[1], ''),'##', ex_str)                         as `faccess_address`        -- 访问地址\n            ,`fparameter_description` -- 参数描述\n            ,`faccess_policy`         -- 访问策略\n            ,`fcomplete_example`      -- 完整示例\n            ,`fstate`                 -- 状态\n            ,`fcreater`               -- 创建人\n            ,  `fcreate_time`           -- 创建时间\n            ,`fupdater`               -- 修改人\n            ,  `fupdate_time`          -- 更新时间\n        --,fdevelopers_tel_mobile_make                                -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_service_information_a lateral view explode(array(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48)) tmp as ex_str-- 服务信息表\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t4 on t1.method = t4.faccess_address and t1.dt = t4.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               concat(`id`,'##',ex_str) as `id`                                                                                                -- id\n            ,`fservice_group_name`      -- 服务组名称\n            ,`fdescription_information` -- 描述\n            ,`fservice_providers`       -- 服务提供方\n            --,ftel                                                       -- 联系电话 加密\n            ,`fmail`                    -- 邮箱\n            ,`fstate`                   -- 状态\n            ,`fcreater`                 -- 创建人\n            ,  `fcreate_time`             -- 创建时间\n            ,`fupdater`                 -- 修改人\n            , `fupdate_time`             -- 更新时间\n            --,ftel_mobile_make                                           -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_service_group_information_a lateral view explode(array(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48)) tmp as ex_str--服务组信息\n        where dt >= '2021-06-01' and dt <= '2021-12-31'\n        ) t5 on t4.fgroup_id = t5.id and t1.dt = t5.dt"
//    可用
//    val sqltest:String = "select\n         nvl(t1.tagid ,'')                       as tag_id                                             -- tagid\n        , nvl(t1.appKey ,'')                      as app_key                                            -- appkey\n        , nvl(t1.logtime ,'1970-01-01 08:00:00')                     as log_time                                           -- 日志时间\n        , nvl(t1.httpProxyProcess ,'')            as http_proxy_process                                 -- http过程代理访问工序数\n        , nvl(t1.httpProxyTotalTimeConsuming ,-1) as http_proxy_total_time_consuming                    -- http过程代理访问总耗时（毫秒）\n        , nvl(t1.httpProxyDetail ,'')             as http_proxy_detail                                  -- http过程代理明细\n        , nvl(t1.method ,'')                      as method                                             -- 服务名称\n        , nvl(t1.requestIp ,'')                   as request_ip                                         -- 访问者IP\n        , nvl(t1.requestParams ,'')               as request_params                                     -- 请求入参\n        , nvl(t1.responseCode ,'')                as response_code                                      -- 响应状态码\n        , nvl(t1.responseData ,'')                as response_data                                      -- 响应结果\n        , nvl(t1.responseMessage ,'')             as response_message                                   -- 响应信息\n        , nvl(t1.server ,'')                      as server                                             -- 服务器地址xx.xx.xx.xx:xx\n        , nvl(t1.timeConsuming ,-1)               as time_consuming                                     -- 方法耗时(毫秒)\n        , nvl(t1.hour ,-1)                        as hour                                               -- 小时\n        , nvl(t2.fuser_information ,'')           as user_service_information_fuser_information         -- 用户信息描述\n        , nvl(t2.fuser_name ,'')                  as user_service_information_fuser_name                -- 联系人\n        , nvl(t2.fuser_text ,'')                  as user_service_information_fuser_text                -- 用户名称\n        , nvl(t2.fuser_mail ,'')                  as user_service_information_fuser_mail                -- 用户安全邮箱\n        , nvl(t2.fservice ,'')                    as user_service_information_fservice                  -- 所选服务\n        , nvl(t2.fservice_validity_type ,'')      as user_service_information_fservice_validity_type    -- 是否有限制时间\n        , nvl(t2.fservice_validity_begin,'1970-01-01 08:00:00')     as user_service_information_fservice_validity_begin   -- appkey有效期(开始日期)\n        , nvl(t2.fservice_validity_end,'2092-01-01 08:00:00')      as user_service_information_fservice_validity_end     -- appkey有效期(结束日期)\n        , nvl(t2.fip_white_list ,'')              as user_service_information_fip_white_list            -- ip白名单\n        , nvl(t2.fstate ,'')                      as user_service_information_fstate                    -- 用户信息状态\n        , nvl(t2.fcreater ,'')                    as user_service_information_fcreater                  -- 用户信息创建人\n        , nvl(t2.fcreate_time,'1970-01-01 08:00:00')                as user_service_information_fcreate_time              -- 用户信息创建时间\n        , nvl(t2.fupdater ,'')                    as user_service_information_fupdater                  -- 用户信息修改人\n        , nvl(t2.fupdate_time,'1970-01-01 08:00:00')                as user_service_information_fupdate_time              -- 用户信息更新时间\n        , nvl(t3.fuser_type ,'')                  as user_information_fuser_type                        -- 公司用户类别\n        , nvl(t3.fuser_information ,'')           as user_information_fuser_information                 -- 公司用户信息描述\n        , nvl(t3.fuser_text ,'')                  as user_information_fuser_text                        -- 公司用户名称\n        , nvl(t3.fuser_name ,'')                  as user_information_fuser_name                        -- 公司联系人\n        , nvl(t3.fuser_mail ,'')                  as user_information_fuser_mail                        -- 公司信息用户安全邮箱地址\n        , nvl(t3.fstate ,'')                      as user_information_fstate                            -- 公司信息状态\n        , nvl(t3.fcreater ,'')                    as user_information_fcreater                          -- 公司信息创建人\n        , nvl(t3.fcreate_time,'1970-01-01 08:00:00')                as user_information_fcreate_time                      -- 公司信息创建时间\n        , nvl(t3.fupdater ,'')                   as user_information_fupdater                          -- 公司信息修改人\n        , nvl(t3.fupdate_time,'1970-01-01 08:00:00')                as user_information_fupdate_time                      -- 公司信息更新时间\n        , nvl(t4.fservice_name ,'')               as service_information_fservice_name                  -- 服务名称\n        , nvl(t4.fdevelopers ,'')                 as service_information_fdevelopers                    -- 服务开发人员\n        , nvl(t4.fdevelopers_mail ,'')            as service_information_fdevelopers_mail               -- 服务开发人员邮箱\n        , nvl(t4.ffunction_description ,'')       as service_information_ffunction_description          -- 服务描述\n        , nvl(t4.faccess_address ,'')             as service_information_faccess_address                -- 服务访问地址\n        , nvl(t4.fparameter_description ,'')      as service_information_fparameter_description         -- 服务参数描述\n        , nvl(t4.faccess_policy ,'')              as service_information_faccess_policy                 -- 服务访问策略\n        , nvl(t4.fcomplete_example ,'')           as service_information_fcomplete_example              -- 服务完整示例\n        , nvl(t4.fstate ,'')                      as service_information_fstate                         -- 服务状态\n        , nvl(t4.fcreater ,'')                    as service_information_fcreater                       -- 服务创建人\n        , nvl(t4.fcreate_time,'1970-01-01 08:00:00')               as service_information_fcreate_time                   -- 服务创建时间\n        , nvl(t4.fupdater ,'')                    as service_information_fupdater                       -- 服务修改人\n        , nvl(t4.fupdate_time,'1970-01-01 08:00:00')               as service_information_fupdate_time                   -- 服务更新时间\n        , nvl(t5.fservice_group_name ,'')         as service_group_information_fservice_group_name      -- 服务组名称\n        , nvl(t5.fdescription_information ,'')    as service_group_information_fdescription_information -- 服务组描述\n        , nvl(t5.fservice_providers ,'')          as service_group_information_fservice_providers       -- 服务组提供方\n        , nvl(t5.fmail ,'')                       as service_group_information_fmail                    -- 服务组邮箱\n        , nvl(t5.fstate ,'')                      as service_group_information_fstate                   -- 服务组状态\n        , nvl(t5.fcreater ,'')                    as service_group_information_fcreater                 -- 服务组创建人\n        , nvl(t5.fcreate_time,'1970-01-01 08:00:00')                as service_group_information_fcreate_time             -- 服务组创建时间\n        , nvl(t5.fupdater ,'')                    as service_group_information_fupdater                 -- 服务组修改人\n        , nvl(t5.fupdate_time,'1970-01-01 08:00:00')                as service_group_information_fupdate_time             -- 服务组更新时间\n        , t1.dt                          as dt\n        from (\n            select nvl(regexp_replace(tagid, '\\\\[|\\\\]', ''), '')                                         as tagid\n            , nvl(split(regexp_replace(logtime, '\\\\[|\\\\]', ''), '\\\\.')[0],\n            '1970-01-01 08:00:00')                                                 as logtime\n            , nvl(get_json_object(content, '$[0].appKey'), '')                                      as `appKey`\n            , nvl(get_json_object(content, '$[0].httpProxyProcess'), -1)                            as `httpProxyProcess`\n            , nvl(get_json_object(content, '$[0].httpProxyTotalTimeConsuming'),-1)                  as `httpProxyTotalTimeConsuming`\n            , nvl(get_json_object(content, '$[0].httpProxyDetail'), '')                             as `httpProxyDetail`\n            , nvl(get_json_object(content, '$[0].method'), '')                                      as `method`\n            , nvl(get_json_object(content, '$[0].requestIp'), '')                                   as `requestIp`\n            , nvl(get_json_object(content, '$[0].requestParams'), '')                               as `requestParams`\n            , nvl(get_json_object(content, '$[0].responseCode'), '')                                as `responseCode`\n            , nvl(get_json_object(content, '$[0].responseData'), '')                                as `responseData`\n            , nvl(get_json_object(content, '$[0].responseMessage'), '')                             as `responseMessage`\n            , nvl(get_json_object(content, '$[0].server'), '')                                      as `server`\n            , nvl(get_json_object(content, '$[0].timeConsuming'), -1)                               as `timeConsuming`\n            , dt\n            , hour\n        from yx_stage.stage_99_api_proce_log\n        where dt >= '2022-01-01' and dt <= '2022-01-31'\n        ) t1\n        left join\n        (\n        select /*+ BROADCAST(r) */\n              fpid\n            ,`fuser_information`       -- 信息描述\n            ,`fuser_name`              -- 联系人\n            ,`fuser_text`              -- 用户名称\n            --,fuser_tel                                       -- 用户电话 加密\n            ,`fuser_mail`              -- 用户安全邮箱\n            ,`fappkey`                 -- 请求标识\n            ,`fservice`                -- 所选服务\n            ,`fservice_validity_type`  -- 是否有限制时间\n            ,`fservice_validity_begin` -- appkey有效期(开始日期)\n            ,`fservice_validity_end`   -- appkey有效期(结束日期)\n            ,`fip_white_list`          -- ip白名单\n            ,`fstate`                  -- 状态\n            ,`fcreater`                -- 创建人\n            , `fcreate_time`            -- 创建时间\n            ,`fupdater`                -- 修改人\n            , `fupdate_time`            -- 更新时间\n            --,fuser_tel_mobile_make                           -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_user_service_information_a -- 用户信息表\n        where dt >= '2022-01-01' and dt <= '2022-01-31'\n        ) t2 on t1.appkey = t2.fappkey and t1.dt = t2.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               id                                                                                          -- 用户id\n            ,`fuser_type`        -- 用户类别\n            ,`fuser_information` -- 用户信息描述\n            ,`fuser_text`        -- 用户名称\n            ,`fuser_name`        -- 联系人\n            --,fuser_tel                                           -- 联系电话, 加密\n            ,`fuser_mail`        -- 用户安全邮箱地址\n            ,`fstate`            -- 状态：\n            ,`fcreater`          -- 创建人\n            ,  `fcreate_time`     -- 创建时间\n            ,`fupdater`          -- 修改人\n            ,  `fupdate_time`      -- 更新时间\n            --,fuser_tel_mobile_make                               -- 手机号码掩码\n            , dt\n            from yx_ods.ods_41_tb_user_information_a -- 公司信息表\n        where dt >= '2022-01-01' and dt <= '2022-01-31'\n        ) t3 on t2.fpid = t3.id and t1.dt = t3.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               fgroup_id                                                                                        -- 服务组id\n            ,`fservice_name`          -- 服务名称\n            ,`fdevelopers`            -- 开发人员\n            --,fdevelopers_tel                                            -- 开发人员电话 加密\n            ,`fdevelopers_mail`       -- 开发人员邮箱\n            ,`ffunction_description`  -- 服务描述\n            , nvl(split(faccess_address, 'method=')[1], '')                          as `faccess_address`        -- 访问地址\n            ,`fparameter_description` -- 参数描述\n            ,`faccess_policy`         -- 访问策略\n            ,`fcomplete_example`      -- 完整示例\n            ,`fstate`                 -- 状态\n            ,`fcreater`               -- 创建人\n            ,  `fcreate_time`           -- 创建时间\n            ,`fupdater`               -- 修改人\n            ,  `fupdate_time`          -- 更新时间\n        --,fdevelopers_tel_mobile_make                                -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_service_information_a -- 服务信息表\n        where dt >= '2022-01-01' and dt <= '2022-01-31'\n        ) t4 on t1.method = t4.faccess_address and t1.dt = t4.dt\n        left join\n        (\n        select /*+ BROADCAST(r) */\n               id                                                                                                 -- id\n            ,`fservice_group_name`      -- 服务组名称\n            ,`fdescription_information` -- 描述\n            ,`fservice_providers`       -- 服务提供方\n            --,ftel                                                       -- 联系电话 加密\n            ,`fmail`                    -- 邮箱\n            ,`fstate`                   -- 状态\n            ,`fcreater`                 -- 创建人\n            ,  `fcreate_time`             -- 创建时间\n            ,`fupdater`                 -- 修改人\n            , `fupdate_time`             -- 更新时间\n            --,ftel_mobile_make                                           -- 手机号码掩码\n            , dt\n        from yx_ods.ods_41_tb_service_group_information_a --服务组信息\n        where dt >= '2022-01-01' and dt <= '2022-01-31'\n        ) t5 on t4.fgroup_id = t5.id and t1.dt = t5.dt"
    val properties = new Properties()
    properties.setProperty("user","yixin_etl")
    properties.setProperty("password","jxykHBKR")
    val df: DataFrame = spark.sql(sqltest)
    //  val dropTableSQL:String = s"drop table if exists $userDB.$tableName"
    df.write.mode(SaveMode.Overwrite)
      .option("batchsize","1000")
      .option("isolationLevel","NONE")
      .option("driver","com.clickhouse.jdbc.ClickHouseDriver")
      .jdbc(CLICKHOUSE_URL,"mds_api_proce_log1",properties)
  }


}


